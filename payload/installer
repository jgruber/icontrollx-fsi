#!/bin/bash

WK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
KEY_FILE='archive.pubkey.20160210.pem'
TMOS_KEY_DIR='/usr/lib/install'

function validate_signature() {
    key_path="${TMOS_KEY_DIR}/${KEY_FILE}"
    package_name=$(basename $1)
    if [ -f $key_path ]; then
        openssl dgst -sha512 -verify "${TMOS_KEY_DIR}/${KEY_FILE}" -signature $2 $1 > /dev/null
        if [ "$?" -ne "0" ]; then
            echo "${package_name} has an invalid signature for key: ${KEY_FILE}"
            return 1
        else
            echo "${package_name} is validated as F5 supported"
            return $?
        fi
    else
        echo "public key file: $key_path is not on this system"
        return 1
    fi
}

function install_package() {
    package_name=$(basename $1)
    mkdir -p "/var/lib/cloud/fsiverified"
    cp "${WK_DIR}/${package_name}" "/var/lib/cloud/fsiverified/${package_name}"
    python "${WK_DIR}/package_installer.py" "${package_name}"
    if [ "$?" -ne "0" ]; then
        return 1
    else
        return 0
    fi
}

installer_exit_status=0

for pkg in *.rpm; do
    [ -f "${pkg}" ] && [ -f "${pkg}.sha512.sig" ] || break
    validate_signature ${pkg} ${pkg}.sha512.sig
    if [ "$?" -ne "0" ]; then
        installer_exit_status=1
    else
        install_package $1
        installer_exit_status=$?
    fi
done

if [ "$installer_exit_status" -ne "0" ]; then
    echo "installation failed"
    exit 1
else
    echo "installation complete"
    exit 0
fi
