#!/bin/bash

WK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
TMOS_KEY_FILE='archive.pubkey.20160210.pem'
TMOS_KEY_DIR='/usr/lib/install'
MODULE_NAME='f5_secure_installer'


function log() {
    ts=$(date +'%Y-%m-%d %H:%m:%S,%3N')
    echo "$ts - $MODULE_NAME - $1 - $2"
}


function validate_signature() {
    # Use the TMOS onbox public PEM key in a well know directory
    key_path="${TMOS_KEY_DIR}/${TMOS_KEY_FILE}"
    # Use embedded public PEM key if it exists
    if [ -f "${WK_DIR}/public_key.pem" ]; then
        log "DEBUG" "validating with embedded public key"
        key_path="${WK_DIR}/public_key.pem"
    else
        log "DEBUG" "validating against TMOS public key ${TMOS_KEY_FILE}"
    fi
    package_name=$(basename $1)
    if [ -f $key_path ]; then
        openssl dgst -sha512 -verify $key_path -signature $2 $1 > /dev/null
        if [ "$?" -ne "0" ]; then
            log "ERROR" "${package_name} is invalid for F5 support"
            return 1
        else
            log "INFO" "${package_name} validated as F5 supported"
            return 0
        fi
    else
        log "ERROR" "public key file ${TMOS_KEY_FILE} is not on this system"
        return 1
    fi
}

function install_package() {
    package_name=$(basename $1)
    package_dir_name=$(basename ${package_name} .rpm)
    log "INFO" "installing ${package_name}"
    mkdir -p "/var/lib/cloud/fsiverified/${package_dir_name}"
    cp "${WK_DIR}/${package_name}" "/var/lib/cloud/fsiverified/${package_dir_name}/${package_name}"
    if [ -f "${WK_DIR}/LICENSE.txt" ]; then
        cp "${WK_DIR}/LICENSE.txt" "/var/lib/cloud/fsiverified/${package_dir_name}/LICENSE.txt"
        if [ "$3" == "quiet" ]; then
            log "INFO" "software license details in /var/lib/cloud/fsiverified/${package_dir_name}/LICENSE.txt"
        else
            echo "PLEASE READ THE LICENSE"
            more "${WK_DIR}/LICENSE.txt"
        fi
    fi
    if [ -f "${WK_DIR}/EULA.txt" ]; then
        cp "${WK_DIR}/EULA.txt" "/var/lib/cloud/fsiverified/${package_dir_name}/EULA.txt"
        if [ "$3" == "quiet" ]; then
            log "INFO" "end user license details in /var/lib/cloud/fsiverified/${package_dir_name}/EULA.txt"
        else
            echo "PLEASE ACCEPT THE END USER LICENSE AGREEMENT"
            more "${WK_DIR}/EULA.txt"
            read -n1 -p "Please type Y or y to agree to this license: "
            while [[  ! $REPLY =~ ^[Yy]$  ]]
            do
                echo ""
                read -n1 -p "Please type Y or y to agree to this license: "
            done
            echo ""
        fi
    fi
    if [ -f "${WK_DIR}/SUPPORT_CONTACT.txt" ]; then
        cp "${WK_DIR}/SUPPORT_CONTACT.txt" "/var/lib/cloud/fsiverified/${package_dir_name}/SUPPORT_CONTACT.txt"
        support_contact=$(cat ${WK_DIR}/SUPPORT_CONTACT.txt)
        log "INFO" "for support of this software contact: ${support_contact}"
    fi
    python "${WK_DIR}/package_installer.py" "${package_name}"
    if [ "$?" -ne "0" ]; then
        return 1
    else
        return 0
    fi
}

installer_exit_status=0

if [ -z $3 ]; then
    log "DEBUG" "running installer with argument $3"
fi


for pkg in *.rpm; do
    [ -f "${pkg}" ] && [ -f "${pkg}.sha512.sig" ] || break
    validate_signature ${pkg} ${pkg}.sha512.sig
    if [ "$?" -ne "0" ]; then
        installer_exit_status=1
    else
        install_package $1 $2 $3
        installer_exit_status=$?
    fi
done

if [ "$installer_exit_status" -ne "0" ]; then
    log "ERROR" "installation failed"
    exit 1
else
    log "INFO" "installation complete"
    exit 0
fi
